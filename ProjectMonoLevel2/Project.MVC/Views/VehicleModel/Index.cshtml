@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Project.Service.ViewModels.VehicleModelViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Vehicle Models</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    @using (Html.BeginForm("Index", "VehicleModel", FormMethod.Get))
    {
        <b>Search by:</b>
        @Html.RadioButton("searchBy", "Maker", true) <text>Maker</text>
        @Html.RadioButton("searchBy", "Name" ) <text>Model</text>
        @Html.RadioButton("searchBy", "Abrv") <text>Abrv</text> <br />
        @Html.TextBox("searchString") <input type="submit" value="Search" />
    }
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Maker", "Index", new
               {
                   sortBy = ViewBag.SortMaker,
                   searchBy = Request.QueryString["searchBy"],
                   searchString = Request.QueryString["searchString"]
               })
        </th>
        <th>
            @Html.ActionLink("Model", "Index", new
               {
                   sortBy = ViewBag.SortModel,
                   searchBy = Request.QueryString["searchBy"],
                   searchString = Request.QueryString["searchString"]
               })
        </th>
        <th>
            @Html.ActionLink("Abrv", "Index", new
                {
                    sortBy = ViewBag.SortAbrv,
                    searchBy = Request.QueryString["searchBy"],
                    searchString = Request.QueryString["searchString"]
                })
        </th>
        <th></th>
    </tr>
@if (Model.Count() == 0)
{
        <tr>
            <td colspan="4">There are no searched parameters.</td>
        </tr>
}
else
{
    foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.VehicleMake.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Abrv)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.VehicleModelId }) |
            @Html.ActionLink("Details", "Details", new { id = item.VehicleModelId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.VehicleModelId })
        </td>
    </tr>
    }
}

</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], searchString = Request.QueryString["searchString"],
    sortBy = Request["sortBy"]}),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })